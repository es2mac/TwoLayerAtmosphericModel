
define Problem {
    name: null,
    subgoal: null,
    selectedFromBody: null,
    selectedToBody: null,
    selectedControlVolume: null,
    currentEquationRow: null,
    currentSelectedArrows: [],
    constructor: function(name) {
        this.name = name;
        this.subgoal = "selectTransferBodies";
    }
}

define Arrow {
    name: null,
    fromBody: null,
    toBody: null,
    energy: null,
    ieEnergyBox: null,
    ieEnergyText: null,
    completed: false,
    constructor: function(name, fromBody, toBody, energy) {
        this.name = name;
        this.fromBody = fromBody;
        this.toBody = toBody;
        this.energy = energy;
        this.ieEnergyBox = name + "-energy-combo-box";
        this.ieEnergyText = name + "-energy-textfield";
    }
}

define BalanceEquation {
    name: null,
    inArrows: [],
    outArrows: [],
    allArrows: [],
    constructor: function(name, inArrows, outArrows) {
        this.name = name;
        this.inArrows = inArrows;
        this.outArrows = outArrows;
        this.allArrows = inArrows.concat(outArrows);
    }
}

define InterfaceElement {
    name: null,
    value: null,
    constructor: function(n, v) {
        this.name = n;
        this.value = v;
    }
}

define ControlVolumeElement {
    name: null,
    completed: false,
    constructor: function(n, v) {
        this.name = n;
    }
}

define StudentValues {
    selection: null,
    action: null,
    input: null,
    constructor: function(s, a, i) {
        this.selection = s;
        this.action = a;
        this.input = i;
    }
}

define TPA {
    selection: null,
    action: null,
    input: null,
    constructor: function(s, a, i) {
        this.selection = s;
        this.action = a;
        this.input = i;
    }
}
